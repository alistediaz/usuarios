@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.mario.usuarios.controller.LoginControllerTest",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_103666436 { 
   	label=mario
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1532315985 { 
   	label=usuarios
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   JwtTokenUtil1415248639[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JwtTokenUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   key: Key [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ generateToken(userDetails: UserDetails): String</TD></TR>
<TR><TD ALIGN="LEFT" >- getAllClaimsFromToken(token: String): Claims</TD></TR>
<TR><TD ALIGN="LEFT" >+ getClaimFromToken(token: String, claimsResolver: Function&lt;Claims, T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ getExpirationDateFromToken(token: String): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ getUsernameFromToken(token: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isTokenExpired(token: String): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ validate(token: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoginController1128708622[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoginController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   jwtTokenUtil: JwtTokenUtil [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   usuarioRepository: UsuarioRepository [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ handleValidacionException(request: HttpServletRequest, ex: Exception): Error</TD></TR>
<TR><TD ALIGN="LEFT" >+ login(): ResponseLogin</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LoginControllerTest1128708622[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LoginControllerTest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   jwtTokenUtil: JwtTokenUtil [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   loginController: LoginController [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   usuarioDetailsServiceImpl: UsuarioDetailsServiceImpl [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   usuarioRepository: UsuarioRepository [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   webTestClient: WebTestClient [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ testLoginSuccess()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testLoginUsuarioNoExiste()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testLoginWithInvalidToken()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testLoginWithOutdatedToken()</TD></TR>
<TR><TD ALIGN="LEFT" >+ testLoginWithoutToken()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Phone1407706487[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Phone</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   cityCode: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   countryCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   number: long [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ResponseLogin482097420[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ResponseLogin</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   created: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   isActive: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lastLogin: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   password: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   phones: List&lt;Phone&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   token: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ build(usuario: Optional&lt;Usuario&gt;, token: String): ResponseLogin</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UsuarioDetailsImpl648435075[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UsuarioDetailsImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   password: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   username: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ build(usuario: Usuario): UsuarioDetailsImpl</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UsuarioDetailsServiceImpl648435075[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UsuarioDetailsServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   usuarioRepository: UsuarioRepository [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadUserByUsername(userName: String): UserDetails</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
LoginController1128708622 -> JwtTokenUtil1415248639[label="jwtTokenUtil
[1]"];
LoginController1128708622 -> ResponseLogin482097420[label="login() -> build()"];
LoginController1128708622 -> UsuarioDetailsImpl648435075[label="login() -> build()"];
LoginControllerTest1128708622 -> JwtTokenUtil1415248639[label="jwtTokenUtil
[1]"];
LoginControllerTest1128708622 -> LoginController1128708622[label="loginController
[0..1]"];
LoginControllerTest1128708622 -> UsuarioDetailsServiceImpl648435075[label="usuarioDetailsServiceImpl
[0..1]"];
ResponseLogin482097420 -> Phone1407706487[label="phones
[0..*]"];
UsuarioDetailsServiceImpl648435075 -> UsuarioDetailsImpl648435075[label="loadUserByUsername() -> build()"];
    
}
@enduml